services:
  db:
    image: postgres:13
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      TZ: Asia/Tokyo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    image: ${DOCKER_USERNAME}/${BACKEND_REPOSITORY}:${VERSION}
    command: bash -c "bundle exec rails db:migrate && bundle exec rails server -b 0.0.0.0 -p 3000"
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      RAILS_ENV: production
      # RAILS_SERVE_STATIC_FILES: 'true'
      # RAILS_LOG_TO_STDOUT: 'true'
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      TZ: Asia/Tokyo
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKER_USERNAME}/${FRONTEND_REPOSITORY}:${VERSION}
    environment:
      NODE_ENV: production
    command: npm start

  nginx:
    image: nginx:stable
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend

volumes:
  postgresql_data: